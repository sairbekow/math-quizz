!function(){"use strict";var e=(e,t)=>{const a=document.querySelector(".app");a.style.opacity=0,setTimeout((()=>{t.classList.add("d-none"),e.classList.remove("d-none"),a.style.opacity=1}),300)},t=class{static initalize=()=>{localStorage.getItem("practice")||localStorage.setItem("practice",JSON.stringify([])),localStorage.getItem("timeAttack")||localStorage.setItem("timeAttack",JSON.stringify([]))};static getCurrentGameData=e=>{const t=JSON.parse(localStorage.getItem("currentGame"));return t?t[e]:null};static setCurrentGameData=(e={})=>{localStorage.setItem("currentGame",JSON.stringify(e))};static getData=e=>JSON.parse(localStorage.getItem(e))||[];static setData=(e,t)=>{const a=JSON.parse(localStorage.getItem(e));if(a.some((e=>e.name===t.name))){if(a.find((e=>e.name===t.name)).score<t.score){const r=a.map((e=>e.name===t.name?t:e));localStorage.setItem(e,JSON.stringify(r))}}else a.push(t),localStorage.setItem(e,JSON.stringify(a))}},a=class{leaderboard=document.querySelector(".leaderboard");mainPage=document.querySelector(".start-page");backToMainBtn=document.querySelector(".leaderboard__back");select=document.querySelector("#leaderboard-select");initialize=()=>{this.backToMainBtn.addEventListener("click",(()=>e(this.mainPage,this.leaderboard))),this.select.addEventListener("change",this.onChangeMode)};onChangeMode=()=>{"practice"===this.select.value?this.renderItem("practice"):this.renderItem("timeAttack")};renderItem=e=>{const a=document.querySelector(".leaderboard__list"),r=e||t.getCurrentGameData("mode"),i=t.getData(r);this.select.value=r||"practice",a.innerHTML="",i.sort(((e,t)=>t.score-e.score)),i.forEach((e=>{a.append(this.createItem(e.name,e.score))}))};createItem=(e,t)=>{const a=document.createElement("li"),r=document.createElement("p"),i=document.createElement("p"),s=document.createElement("div");return a.setAttribute("class","leaderboard__item"),r.setAttribute("class","leaderboard__name"),i.setAttribute("class","leaderboard__score"),s.setAttribute("class","leaderboard__line"),r.textContent=e,i.textContent=t,a.append(r,s,i),a}},r=class{constructor(e){this.gameField=e}gameOverPage=document.querySelector(".game-over");mainPage=document.querySelector(".start-page");leaderboard=document.querySelector(".leaderboard");gameFieldPage=document.querySelector(".game-field");backToMainBtn=document.querySelector(".game-over__back");goToLeaderboardBtn=document.querySelector(".game-over__leaderboard-btn");playAgainBtn=document.querySelector(".game-over__again-btn");initialize=()=>{this.backToMainBtn.addEventListener("click",(()=>{e(this.mainPage,this.gameOverPage)})),this.goToLeaderboardBtn.addEventListener("click",(()=>{e(this.leaderboard,this.gameOverPage),(new a).renderItem()})),this.playAgainBtn.addEventListener("click",this.playAgain)};playAgain=()=>{this.gameField&&(this.gameField.startGame(),e(this.gameFieldPage,this.gameOverPage))};setScore=e=>{const{score:a,correctScore:r,incorrectScore:i}=e,s=document.querySelector(".game-over__score-amount"),n=document.querySelector(".game-over__score-correct span"),o=document.querySelector(".game-over__score-incorrect span"),c=t.getCurrentGameData("mode"),m=t.getCurrentGameData("player");s.textContent=a,n.textContent=r,o.textContent=i,t.setData(c,{score:a,name:m})}};window.addEventListener("DOMContentLoaded",(()=>{const i=new class{constructor(){this.gameOver=new r,this.mathTask=new class{num1=document.querySelector(".game-field__operand--first");num2=document.querySelector(".game-field__operand--second");operator=document.querySelector(".game-field__operator");result=document.querySelector(".game-field__answer");scoreElement=document.querySelector(".game-field__score");taskElement=document.querySelector(".game-field__content");score=0;correctScore=0;incorrectScore=0;example=null;initialize=()=>{this.result.addEventListener("keydown",(e=>this.quizAction(e))),this.generateTask()};quizAction=e=>{this.result.value&&13===e.keyCode&&(Number(this.result.value)===Number(this.example.result)?this.onCorrectAnswer():this.onWrongAnswer(),this.scoreElement.textContent=this.score,this.result.value="",this.generateTask())};onCorrectAnswer=()=>{const e=document.querySelector(".plus-score");e.classList.add("plus-score-animation"),setTimeout((()=>{e.classList.remove("plus-score-animation")}),700),this.score+=1,this.correctScore+=1};onWrongAnswer=()=>{this.incorrectScore+=1,this.scoreElement.classList.add("trambling-animation"),setTimeout((()=>{this.scoreElement.classList.remove("trambling-animation")}),400),0!==this.score&&(this.score+=-1)};generateTask=()=>{this.taskElement.classList.add("slide-animation"),setTimeout((()=>{this.taskElement.classList.remove("slide-animation")}),720),setTimeout((()=>{this.example=this.generateExample(),this.renderExample(this.example)}),300)};getScore=()=>({score:this.score,correctScore:this.correctScore,incorrectScore:this.incorrectScore});getRandom=(e,t)=>Math.round(Math.random()*(t-e)+e);operators=["-","+","*","/"];sum=(e,t,a)=>"/"===a?e/t:"+"===a?e+t:"-"===a?e-t:e*t;generateExample=()=>{const e=this.operators[this.getRandom(0,this.operators.length-1)];let t=this.getRandom(1,10),a=this.getRandom(1,10);if("/"===e)for(;!Number.isInteger(t/a);)t=this.getRandom(1,10),a=this.getRandom(1,10);return{num1:t,num2:a,operator:e,result:this.sum(t,a,e)}};renderExample=e=>{this.num1.textContent=e.num1,this.num2.textContent=e.num2,this.operator.textContent=e.operator};resetScore=()=>{this.score=0,this.correctScore=0,this.incorrectScore=0}},this.mathTask.initialize()}stopBtn=document.querySelector(".game-field__btn");playerName=document.querySelector(".game-field__title span");currentPlayer=null;gameMode=null;timeout=null;timer=null;initialize=()=>{this.stopBtn.addEventListener("click",this.stopGame)};startGame=()=>{const e=document.querySelector(".game-field__answer");setTimeout((()=>{e.focus()}),300),this.timer=new class{FULL_DASH_ARRAY=283;WARNING_THRESHOLD=10;ALERT_THRESHOLD=5;COLOR_CODES={info:{color:"green"},warning:{color:"orange",threshold:this.WARNING_THRESHOLD},alert:{color:"red",threshold:this.ALERT_THRESHOLD}};TIME_LIMIT=90;timePassed=0;timeLeft=this.TIME_LIMIT;timerInterval=null;remainingPathColor=this.COLOR_CODES.info.color;formatTime=e=>{let t=e%60;return t<10&&(t=`0${t}`),`${Math.floor(e/60)}:${t}`};a=document.querySelector(".game-field__timer").innerHTML=`\n    <div class="base-timer">\n      <svg class="base-timer__svg" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">\n        <g class="base-timer__circle">\n          <circle class="base-timer__path-elapsed" cx="50" cy="50" r="45"></circle>\n          <path\n            id="base-timer-path-remaining"\n            stroke-dasharray="283"\n            class="base-timer__path-remaining ${this.remainingPathColor}"\n            d="\n              M 50, 50\n              m -45, 0\n              a 45,45 0 1,0 90,0\n              a 45,45 0 1,0 -90,0\n            "\n          ></path>\n        </g>\n      </svg>\n      <span id="base-timer-label" class="base-timer__label">\n        ${this.formatTime(this.timeLeft)}\n      </span>\n    </div>`;startTimer=()=>{this.timerInterval=setInterval((()=>{this.timePassed=this.timePassed+=1,this.timeLeft=this.TIME_LIMIT-this.timePassed,document.getElementById("base-timer-label").innerHTML=this.formatTime(this.timeLeft),this.setCircleDasharray(),this.setRemainingPathColor(this.timeLeft),0===this.timeLeft&&this.onTimesUp()}),1e3)};setRemainingPathColor=e=>{const{alert:t,warning:a,info:r}=this.COLOR_CODES;e<=t.threshold?(document.getElementById("base-timer-path-remaining").classList.remove(a.color),document.getElementById("base-timer-path-remaining").classList.add(t.color)):e<=a.threshold&&(document.getElementById("base-timer-path-remaining").classList.remove(r.color),document.getElementById("base-timer-path-remaining").classList.add(a.color))};calculateTimeFraction=()=>{const e=this.timeLeft/this.TIME_LIMIT;return e-1/this.TIME_LIMIT*(1-e)};setCircleDasharray=()=>{const e=`${(this.calculateTimeFraction()*this.FULL_DASH_ARRAY).toFixed(0)} 283`;document.getElementById("base-timer-path-remaining").setAttribute("stroke-dasharray",e)};onTimesUp=()=>{clearInterval(this.timerInterval)}},this.mathTask.generateTask(),this.currentPlayer=t.getCurrentGameData("player"),this.gameMode=t.getCurrentGameData("mode"),this.playerName.textContent=t.getCurrentGameData("player"),"timeAttack"===this.gameMode&&(this.timeout=setTimeout(this.stopGame,9e4),this.timer.startTimer())};stopGame=()=>{const t=document.querySelector(".game-field"),a=document.querySelector(".game-over");this.gameOver.setScore(this.mathTask.getScore()),"timeAttack"===this.gameMode&&(this.timer.onTimesUp(),clearTimeout(this.timeout)),e(a,t),this.resetPlayerData(),this.mathTask.resetScore()};resetPlayerData=()=>{const e=document.querySelector(".game-field__score");document.querySelector(".game-field__answer").value="",e.textContent=0}};new r(i).initialize(),new class{constructor(e){this.gameField=e,this.gameField.initialize()}mainPage=document.querySelector(".start-page");gameFieldPage=document.querySelector(".game-field");leaderboardPage=document.querySelector(".leaderboard");manualPage=document.querySelector(".manual");userName=document.querySelector(".start-page__input");startBtn=document.querySelector(".start");goToLeaderboardBtn=document.querySelector(".start-page__leader");manualBtn=document.querySelector(".start-page__manual");backtoMainFromManual=document.querySelector(".manual__back");initialize=()=>{this.startBtn.addEventListener("click",this.start),this.manualBtn.addEventListener("click",(()=>{e(this.manualPage,this.mainPage)})),this.backtoMainFromManual.addEventListener("click",(()=>{e(this.mainPage,this.manualPage)})),this.goToLeaderboardBtn.addEventListener("click",(()=>{e(this.leaderboardPage,this.mainPage),(new a).renderItem("practice")})),window.addEventListener("unload",(()=>{t.setCurrentGameData()}))};start=()=>{const a=document.querySelector("#practice-mode"),r=document.querySelector(".game-field__timer");this.userName.value.trim()&&(t.initalize(),t.setCurrentGameData({player:this.userName.value,mode:a.checked?"practice":"timeAttack"}),a.checked?r.style="display: none":r.style="display: block",e(this.gameFieldPage,this.mainPage),this.gameField.startGame())}}(i).initialize(),(new a).initialize()}))}();